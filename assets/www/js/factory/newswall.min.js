angular.module("starter").factory("Newswall",function($pwaRequest){var factory={value_id:null,displayed_per_page:0,extendedOptions:{},collection:[]};return factory.setValueId=function(value_id){factory.value_id=value_id},factory.setExtendedOptions=function(options){factory.extendedOptions=options},factory.preFetch=function(){factory.findAll()},factory.findAll=function(offset,refresh){return this.value_id?$pwaRequest.get("comment/mobile_list/findall",angular.extend({urlParams:{value_id:this.value_id,offset:offset},refresh:refresh},factory.extendedOptions)):$pwaRequest.reject("[Factory::Newswall.findAll] missing value_id")},factory.findNear=function(offset,position){return this.value_id?$pwaRequest.get("comment/mobile_list/findnear",{urlParams:{value_id:this.value_id,offset:offset,latitude:position.latitude,longitude:position.longitude},cache:!1}):$pwaRequest.reject("[Factory::Newswall.findNear] missing value_id")},factory.findAllPhotos=function(){return this.value_id?$pwaRequest.get("comment/mobile_gallery/findall",{urlParams:{value_id:this.value_id}}):$pwaRequest.reject("[Factory::Newswall.findAllPhotos] missing value_id")},factory.findAllLocation=function(){return this.value_id?$pwaRequest.get("comment/mobile_map/findall",{urlParams:{value_id:this.value_id}}):$pwaRequest.reject("[Factory::Newswall.findAllLocation] missing value_id")},factory.find=function(comment_id){return this.value_id&&void 0!==comment_id?$pwaRequest.get("comment/mobile_view/find",{urlParams:{value_id:this.value_id,comment_id:comment_id}}):$pwaRequest.reject("[Factory::Newswall.find] missing value_id or comment_id")},factory.getComment=function(comment_id){if(!this.value_id)return $pwaRequest.reject("[Factory::Newswall.getComment] missing value_id");var comment=_.get(_.filter(factory.collection,function(comment){return comment.id==comment_id})[0],"embed_payload",!1);return comment?$pwaRequest.resolve(comment):factory.find(comment_id)},factory.insertAnswer=function(comment_id,answer){if(!this.value_id)return $pwaRequest.reject("[Factory::Newswall.insertComment] missing value_id");_.forEach(factory.collection,function(comment){comment.id==comment_id&&comment.hasOwnProperty("embed_payload")&&(comment.embed_payload.hasOwnProperty("answers")?comment.embed_payload.answers.push(answer):comment.embed_payload.answers=[answer],comment.details.comments.text=comment.embed_payload.answers.length)})},factory.addLike=function(comment_id){return this.value_id?$pwaRequest.post("comment/mobile_view/addlike",{data:{comment_id:comment_id,value_id:this.value_id},cache:!1}).then(function(data){return $pwaRequest.get("comment/mobile_list/findall",{urlParams:{value_id:this.value_id},refresh:!0}),data}):$pwaRequest.reject("[Factory::Newswall.addLike] missing value_id")},factory.flagPost=function(comment_id){return this.value_id?$pwaRequest.get("comment/mobile_view/flagpost",{urlParams:{value_id:this.value_id,comment_id:comment_id},cache:!1}):$pwaRequest.reject("[Factory::Newswall.flagPost] missing value_id")},factory.flagComment=function(answer_id){return this.value_id?$pwaRequest.get("comment/mobile_view/flagcomment",{urlParams:{value_id:this.value_id,answer_id:answer_id},cache:!1}):$pwaRequest.reject("[Factory::Newswall.flagComment] missing value_id")},factory.createComment=function(text,image,position){if(!this.value_id)return $pwaRequest.reject("[Factory::Newswall.createComment] missing value_id");var params={};return position&&position.latitude&&position.longitude&&(params.position={latitude:position.latitude,longitude:position.longitude}),$pwaRequest.post("comment/mobile_edit/createv2",{urlParams:{value_id:this.value_id},data:angular.extend(params,{value_id:this.value_id,text:text,image:image}),cache:!1})},factory}),angular.module("starter").factory("Comment",function($pwaRequest){var factory={extendedOptions:{},collection:[]};return factory.setExtendedOptions=function(options){factory.extendedOptions=options},factory.findAll=function(comment_id){return comment_id?$pwaRequest.get("comment/mobile_comment/findall",{urlParams:{comment_id:comment_id}}):$pwaRequest.reject("[Factory::Comment.findAll] missing comment_id")},factory.add=function(comment){return comment.id?$pwaRequest.post("comment/mobile_comment/add",{data:{comment_id:comment.id,text:comment.text},cache:!1}).then(function(data){return $pwaRequest.get("comment/mobile_comment/findall",{urlParams:{comment_id:comment.id},refresh:!0}),data}):$pwaRequest.reject("[Factory::Comment.add] missing comment_id")},factory});