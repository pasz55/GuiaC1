angular.module("starter").factory("Places",function($pwaRequest,Cms){var factory={value_id:null,collection:[],extendedOptions:{}};return factory.setValueId=function(value_id){factory.value_id=value_id},factory.setExtendedOptions=function(options){factory.extendedOptions=options},factory.preFetch=function(){factory.findAll()},factory.findAll=function(position,offset,refresh){if(!this.value_id)return $pwaRequest.reject("[Factory::Places.findAll] missing value_id");var parameters={value_id:this.value_id,offset:offset};return angular.isObject(position)&&(parameters.latitude=position.latitude,parameters.longitude=position.longitude),$pwaRequest.get("places/mobile_list/findall",angular.extend({urlParams:parameters,refresh:refresh},factory.extendedOptions))},factory.findAllMaps=function(refresh){if(!this.value_id)return $pwaRequest.reject("[Factory::Places.findAll] missing value_id");var parameters={value_id:this.value_id,maps:!0};return $pwaRequest.get("places/mobile_list/findall",angular.extend({urlParams:parameters,refresh:refresh},factory.extendedOptions))},factory.find=function(place_id){return this.value_id?$pwaRequest.get("places/mobile_view/find",{urlParams:{value_id:this.value_id,place_id:place_id}}):$pwaRequest.reject("[Factory::Places.find] missing value_id")},factory.getPlace=function(place_id){if(!this.value_id)return $pwaRequest.reject("[Factory::Places.getPlace] missing value_id");var place=_.get(_.filter(factory.collection,function(place){return place.id==place_id})[0],"embed_payload",!1);return place?$pwaRequest.resolve(place):Cms.findAll(place_id)},factory.settings=function(){return this.value_id?$pwaRequest.resolve($pwaRequest.getPayloadForValueId(factory.value_id).settings):$pwaRequest.reject("[Factory::Places.settings] missing value_id")},factory});